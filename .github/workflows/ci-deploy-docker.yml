name: Build & Deploy Docker to EC2

on:
  push:
    branches: [ main ]

jobs:
  build_and_push:
    name: Build and push image to GHCR
    runs-on: ubuntu-latest
    outputs:
      owner_lc: ${{ steps.owner.outputs.lc }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute lowercase owner
        id: owner
        run: echo "lc=${OWNER,,}" >> "$GITHUB_OUTPUT"
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: server            # was "."; smaller, faster context
          file: server/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.owner.outputs.lc }}/fgsm-server:latest
            ghcr.io/${{ steps.owner.outputs.lc }}/fgsm-server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ec2:
    name: Pull latest image & restart via docker compose on EC2
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.8
        env:
          GHCR_USER: ${{ needs.build_and_push.outputs.owner_lc }}
          GHCR_PAT_SECRET: ${{ secrets.GHCR_PAT }}
          COMPOSE_DIR: ${{ secrets.EC2_COMPOSE_DIR }}   # path where docker-compose.yml lives
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: GHCR_USER,GHCR_PAT_SECRET,COMPOSE_DIR
          script: |
            set -euo pipefail
            cd "${COMPOSE_DIR:-/home/${{ secrets.EC2_USER }}}"
            echo "${GHCR_PAT_SECRET}" | docker login ghcr.io -u "${GHCR_USER}" --password-stdin
            docker compose pull
            docker compose up -d --force-recreate
            docker image prune -f
